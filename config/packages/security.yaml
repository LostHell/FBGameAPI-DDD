security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    encoders:
        App\Domain\Player\Player: bcrypt
    providers:
#        users_in_memory: { memory: null }
        database:
            entity:
                class: App\Domain\Player\Player
                property: username
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        api:
          pattern: ^/api
          stateless: true
          guard:
            authenticators:
              - lexik_jwt_authentication.jwt_token_authenticator

        login:
            pattern: ^/login
            stateless: true
            anonymous: true
            json_login:
                check_path: /login
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator

        register:
            pattern: ^/register
            stateless: true
            anonymous: true
            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true
    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/api,      roles: IS_AUTHENTICATED_FULLY }
        - { path: ^/login,    roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/register, roles: IS_AUTHENTICATED_ANONYMOUSLY }
